//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BusinessRuleParser.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Bb.BusinessRule.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BusinessRuleParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IBusinessRuleParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScript([NotNull] BusinessRuleParser.ScriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.declare_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclare_constants([NotNull] BusinessRuleParser.Declare_constantsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.declare_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclare_constant([NotNull] BusinessRuleParser.Declare_constantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.matchings"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatchings([NotNull] BusinessRuleParser.MatchingsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.matching"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatching([NotNull] BusinessRuleParser.MatchingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.unit_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnit_statement([NotNull] BusinessRuleParser.Unit_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.load_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoad_data([NotNull] BusinessRuleParser.Load_dataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] BusinessRuleParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] BusinessRuleParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] BusinessRuleParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRule([NotNull] BusinessRuleParser.RuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResult([NotNull] BusinessRuleParser.ResultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAction([NotNull] BusinessRuleParser.ActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.expre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpre([NotNull] BusinessRuleParser.ExpreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.expre_action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpre_action([NotNull] BusinessRuleParser.Expre_actionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] BusinessRuleParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] BusinessRuleParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] BusinessRuleParser.OperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.comparer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparer([NotNull] BusinessRuleParser.ComparerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.identifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifiers([NotNull] BusinessRuleParser.IdentifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] BusinessRuleParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComment([NotNull] BusinessRuleParser.CommentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] BusinessRuleParser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] BusinessRuleParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] BusinessRuleParser.IntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] BusinessRuleParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.delay"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDelay([NotNull] BusinessRuleParser.DelayContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BusinessRuleParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] BusinessRuleParser.StringContext context);
}
} // namespace Pssa.BusinessRule.Parser
